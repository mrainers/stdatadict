% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datadict_tables.R
\name{join_with_form_items}
\alias{join_with_form_items}
\title{Add Data To Form Item Tables}
\usage{
join_with_form_items(datadict_tables, data, ...)
}
\arguments{
\item{datadict_tables}{table list, generated with \code{\link[=create_datadict_tables]{create_datadict_tables()}}}

\item{data}{data frame or list of data framed to be joined with form_item
tables of datadict_tables}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> additional options to pass to
\code{\link[dplyr:mutate-joins]{dplyr::left_join()}}}
}
\value{
datadict_tables with joined data to the form item tables
}
\description{
Wrapper function to join a data set or a list of data sets with the form item
tables. It combines all tables in datadict_tables$form_items, and adds the
additional data with dplyrs \code{inner_join()} function.

\code{mainform} is the key variable to match by form name.

Keep in mind that the variable names in the form item tables depend on the
language settings of this package (Default is "en"). To be independent from
the language setting rename your matching key variables as following before
performing the join:
\itemize{
\item \code{table_col} = Table,
\item \code{question_col} = Question,
\item \code{varlab_col} = "Variable Label",
\item \code{varname_col} = "Variable Name",
\item \code{vartype_col} = Type
}
}
\examples{
\dontrun{
## create example data for matching
extra_data <- form_items \%>\%
  tibble::enframe(name = "mainform") \%>\%
  tidyr::unnest(cols = c(value)) \%>\%
  select(
    mainform,
    table_col = Table,
    varname_col = "Variable Name") \%>\%
  # add random vargroups
  mutate(var_group = sample(
    x = c("one", "two", NA),
    size = nrow(.),
    replace = TRUE,
    prob = c(0.2, 0.2, 0.6)
  )) \%>\%
  filter(!is.na(var_group))

## add "var_group" to form_items, match by mainform, table and varname
datadict_tables <- join_with_form_items(datadict_tables, extra_data)
}
}
